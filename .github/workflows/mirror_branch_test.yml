name: mirrortest

on:
  push:
    branches:
      - ouproj_template

jobs:
  git-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: ouproj_template

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@v1

      - name: Install system dependencies
        # first remove renv, then install system requirements based on packages listed in DESCRIPTION
        run: |
          rm renv.lock
          rm -r renv
          rm .Rprofile
          R -e 'install.packages("remotes", repos = "https://cloud.r-project.org")'
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install R package dependencies (cached)
        # see https://github.com/r-lib/actions/tree/v2/setup-r-dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: local::., any::readxl, any::captioner

      - name: Create template repos in separate directories
        run: |
          R -e 'devtools::install_local(".")'
          R -e 'library(ourproj); ourproj_start(directory = "~/ourproj_template_minimal", project_title = "My Project", git_username = "rmgpanw", github_gitlab = "github", minimal = TRUE)'
          R -e 'library(ourproj); ourproj_start(directory = "~/ourproj_template", project_title = "My Project", git_username = "rmgpanw", github_gitlab = "github", minimal = FALSE)'

      - name: Create new orphan branch populated with minimal template repo
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout --orphan ourproj_template_minimal
          git reset
          cp -r .git ~/ourproj_template_minimal
          rm -rf .[^.]* *
          cp -r ~/ourproj_template_minimal/. .
          git add .
          git commit -m "Initial commit"
          R -e 'targets::tar_make()'
          R -e 'targets::tar_meta(fields = error, complete_only = TRUE)'
          git add .
          git commit -m "Run targets pipeline"
          git push --force origin ourproj_template_minimal

      - name: Create new orphan branch populated with template repo
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout --orphan ourproj_template
          git reset
          cp -r .git ~/ourproj_template
          rm -rf .[^.]* *
          cp -r ~/ourproj_template/. .
          git add .
          git commit -m "Initial commit"
          R -e 'targets::tar_make()'
          R -e 'targets::tar_meta(fields = error, complete_only = TRUE)'
          git add .
          git commit -m "Run targets pipeline"
          git push --force origin ourproj_template

      - name: git-sync minimal template repo
        uses: wei/git-sync@v3
        with:
          source_repo: "rmgpanw/ourproj"
          source_branch: "ourproj_template_minimal"
          destination_repo: "rmgpanw/ourproj_template_minimal"
          destination_branch: "main"
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} # optional
          # source_ssh_private_key: ${{ secrets.SOURCE_SSH_PRIVATE_KEY }} # optional, will override `SSH_PRIVATE_KEY`
          # destination_ssh_private_key: ${{ secrets.DESTINATION_SSH_PRIVATE_KEY }} # optional, will override `SSH_PRIVATE_KEY`

      - name: git-sync template repo
        uses: wei/git-sync@v3
        with:
          source_repo: "rmgpanw/ourproj"
          source_branch: "ourproj_template"
          destination_repo: "rmgpanw/ourproj_template"
          destination_branch: "main"
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} # optional
          # source_ssh_private_key: ${{ secrets.SOURCE_SSH_PRIVATE_KEY }} # optional, will override `SSH_PRIVATE_KEY`
          # destination_ssh_private_key: ${{ secrets.DESTINATION_SSH_PRIVATE_KEY }} # optional, will override `SSH_PRIVATE_KEY`
